{
    "info": {
		"_postman_id"   : "112955c7-4c52-44c2-896f-fc20f42fe48d",
		"name"          : "@apps - iam/bounded-context",
		"schema"        : "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
			"name": "GraphQL - iamCreateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamCreateBoundedContextInput!)\n{\n\tiamCreateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t}\n}",
                        "variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Ergonomic Frozen Towels\", \n\t\t\"root\": \"7xuzkn5crpicxh5qwllacybpwzhqf6\", \n\t\t\"sort\": 684027, \n\t\t\"isActive\": true\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamCreateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:[IamCreateBoundedContextInput]!)\n{\n\tiamCreateBoundedContexts (payload:$payload)\n}",
						"variables": "{\n\t\"payload\":\n\t[\n\t\t{\n\t\t\t\"id\": \"1b0bfced-46b6-4df9-b6e6-5a0ba0f2c70e\", \n\t\t\t\"name\": \"Licensed Metal Sausages\", \n\t\t\t\"root\": \"bbyz09w6pum1sjc2c3ms1iu2w7xiyd\", \n\t\t\t\"sort\": 595547, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"7f2d31de-9992-4856-9824-e51b5e930a4b\", \n\t\t\t\"name\": \"Practical Plastic Bacon\", \n\t\t\t\"root\": \"dlzpl2hefs1mpy1tpoesat2eklg73t\", \n\t\t\t\"sort\": 125740, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"f4ae6864-eb62-4905-97bf-91babd3bb53a\", \n\t\t\t\"name\": \"Practical Metal Fish\", \n\t\t\t\"root\": \"q5x05cx30lt4amsj2v21ampjgpya86\", \n\t\t\t\"sort\": 877509, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"eed9259e-d6b8-4057-8158-42bf42b7ae3d\", \n\t\t\t\"name\": \"Handmade Wooden Hat\", \n\t\t\t\"root\": \"kqz415jekm705997o0yp9454j1a4qq\", \n\t\t\t\"sort\": 984881, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"6bc12421-4d30-44d7-a04c-d6a1275f6ef0\", \n\t\t\t\"name\": \"Practical Plastic Towels\", \n\t\t\t\"root\": \"i3o2qannyw0655giebguvzgkhxoblm\", \n\t\t\t\"sort\": 518291, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"3f16d32a-c676-42ce-9709-d866c0036263\", \n\t\t\t\"name\": \"Handcrafted Concrete Bike\", \n\t\t\t\"root\": \"skdj2ug2jijl4sbqcfiu7qq4poh0f7\", \n\t\t\t\"sort\": 505022, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"91b90e50-5c75-4b30-9e59-e0a417416033\", \n\t\t\t\"name\": \"Refined Rubber Towels\", \n\t\t\t\"root\": \"02eno9z2udgvtfr3vo0s91y1chp00z\", \n\t\t\t\"sort\": 573262, \n\t\t\t\"isActive\": true\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"7ab7d3c4-6ed8-48ef-86dd-b2bc1d962074\", \n\t\t\t\"name\": \"Ergonomic Steel Fish\", \n\t\t\t\"root\": \"p4mo9beo85qqz3h4p2fhvsf9ldalvw\", \n\t\t\t\"sort\": 139294, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"bbb59223-7990-4fbe-92a6-a0e3674e30b6\", \n\t\t\t\"name\": \"Refined Cotton Hat\", \n\t\t\t\"root\": \"czxe9t6tx4ysz88h878nmidydvm1v6\", \n\t\t\t\"sort\": 580256, \n\t\t\t\"isActive\": false\n\t\t}, \n\t\t{\n\t\t\t\"id\": \"48470b0d-3138-464b-b072-b4e0e4c253cb\", \n\t\t\t\"name\": \"Intelligent Frozen Car\", \n\t\t\t\"root\": \"7mqidohezm6c2axquc7dges71xz1cf\", \n\t\t\t\"sort\": 231943, \n\t\t\t\"isActive\": false\n\t\t}\n\t]\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamPaginateBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement $constraint:QueryStatement)\n{\n\tiamPaginateBoundedContexts (query:$query constraint:$constraint)\n\t{\n\t\ttotal\n\t\tcount\n\t\trows\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamGetBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamGetBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($query:QueryStatement)\n{\n\tiamFindBoundedContext (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamFindBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ($id:ID)\n{\n\tiamFindBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamUpdateBoundedContext",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($payload:IamUpdateBoundedContextInput!)\n{\n\tiamUpdateBoundedContext (payload:$payload)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"payload\":\n\t{\n\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\t\"name\": \"Ergonomic Soft Chicken\", \n\t\t\"root\": \"z1lkzv2u2qdrhjo1fjqfw2k56iu2qp\", \n\t\t\"sort\": 259336, \n\t\t\"isActive\": false\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContextById",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($id:ID!)\n{\n\tiamDeleteBoundedContextById (id:$id)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "GraphQL - iamDeleteBoundedContexts",
			"request": {
				"method": "POST",
				"header": [
                ],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation ($query:QueryStatement)\n{\n\tiamDeleteBoundedContexts (query: $query)\n\t{\n\t\tid\n\t\tname\n\t\troot\n\t\tsort\n\t\tisActive\n\t\tcreatedAt\n\t\tupdatedAt\n\t}\n}",
						"variables": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}"
					}
				},
				"url": {
					"raw": "{{URL}}/graphql",
					"host": [
						"{{URL}}"
					],
					"path": [
						"graphql"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Handcrafted Plastic Pizza\", \n\t\"root\": \"5bap9uujjn026ktx9mvpf3v4knzn3e\", \n\t\"sort\": 939673, \n\t\"isActive\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts",
			"request": {
				"method": "POST",
				"header": [
					{
						"key"   : "Content-Type",
						"name"  : "Content-Type",
						"type"  : "text",
						"value" : "application/json"
					}				],
				"body": {
					"mode"  : "raw",
					"raw"   : "[\n\t{\n\t\t\"id\": \"23dd911d-164d-4748-8c05-307a0ef5df47\", \n\t\t\"name\": \"Fantastic Steel Bacon\", \n\t\t\"root\": \"yhpazqf2rov5g738wboy6odpsti44s\", \n\t\t\"sort\": 603447, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"6da490f8-2dda-4e33-8cb5-6a8be69ccb2f\", \n\t\t\"name\": \"Licensed Rubber Shoes\", \n\t\t\"root\": \"85w817a520ux79637a7sszj2by7n9l\", \n\t\t\"sort\": 847020, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"cbbf1c94-a27f-4e60-8661-c8a5ef665bf8\", \n\t\t\"name\": \"Awesome Soft Soap\", \n\t\t\"root\": \"wfurineyjf3fg4sbat36cz9irxq756\", \n\t\t\"sort\": 373669, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"e8908fa3-10e8-4e5e-87fb-df8cb63ecf7c\", \n\t\t\"name\": \"Fantastic Plastic Chair\", \n\t\t\"root\": \"x6lfthf9kh9c4i9yz6261h0gyzxh5e\", \n\t\t\"sort\": 342879, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"d6e57f34-08f3-49ac-bd15-e8c5e00ecebd\", \n\t\t\"name\": \"Incredible Wooden Cheese\", \n\t\t\"root\": \"v3c7j7lksgd28q8jhyi6iuifi4zr5a\", \n\t\t\"sort\": 795609, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"765a4b59-2300-4711-a393-30a4cff54592\", \n\t\t\"name\": \"Ergonomic Frozen Pizza\", \n\t\t\"root\": \"rtcugpvcbw5zqaswq2a35zl2qw76ez\", \n\t\t\"sort\": 156928, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"fa786070-def5-410a-9db6-12bc135d5f7f\", \n\t\t\"name\": \"Practical Rubber Bike\", \n\t\t\"root\": \"daqry1w0oldg425wvv181vbu0ozsd5\", \n\t\t\"sort\": 505153, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"c9083e8f-8380-4cb6-a3e0-834e4ee2ccf8\", \n\t\t\"name\": \"Handmade Steel Pizza\", \n\t\t\"root\": \"ammnjvggbguqgpzkl2pviblat9ks3m\", \n\t\t\"sort\": 778904, \n\t\t\"isActive\": false\n\t}, \n\t{\n\t\t\"id\": \"5bdf3d2e-ece5-4b89-a70d-df4f41961278\", \n\t\t\"name\": \"Gorgeous Granite Mouse\", \n\t\t\"root\": \"9nsom3j75ohdsmtqk2pep37318tv7g\", \n\t\t\"sort\": 312571, \n\t\t\"isActive\": true\n\t}, \n\t{\n\t\t\"id\": \"11e650d0-c1dd-4070-96f2-d79af304c8b4\", \n\t\t\"name\": \"Rustic Plastic Bacon\", \n\t\t\"root\": \"34yshf4jgvtcxyuz6v0grjql0swahf\", \n\t\t\"sort\": 251468, \n\t\t\"isActive\": false\n\t}\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts/paginate",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"offset\": 0,\n\t\t\"limit\": 10\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts/paginate",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
                        "bounded-contexts",
                        "paginate"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-contexts",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{ \n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\"\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/{id}",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw"   : "{\n\t\"id\": \"5b19d6ac-4081-573b-96b3-56964d5326a8\", \n\t\"name\": \"Gorgeous Fresh Chips\", \n\t\"root\": \"5mdsz4wjjk7ya6x21hgadl5fwez2d0\", \n\t\"sort\": 214748, \n\t\"isActive\": false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context"
					]
				}
			},
			"response": []
        },
        {
			"name": "REST - iam/bounded-context/{id}",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-context/5b19d6ac-4081-573b-96b3-56964d5326a8",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-context",
						"5b19d6ac-4081-573b-96b3-56964d5326a8"
					]
				}
			},
			"response": []
		},
        {
			"name": "REST - iam/bounded-contexts",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"query\":\n\t{\n\t\t\"where\":\n\t\t{\n\t\t\t\"id\":\n\t\t\t{\n\t\t\t\t\"[substring]\": \"\"\n\t\t\t}\n\t\t}\n\t}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/iam/bounded-contexts",
					"host": [
						"{{URL}}"
					],
					"path": [
						"iam",
						"bounded-contexts"
					]
				}
			},
			"response": []
		}
    ],
    "variable": [
		{
			"id": "114f207b-2028-495a-a886-821bf7f0280d",
			"key": "URL",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}