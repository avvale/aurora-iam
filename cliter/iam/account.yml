version: 0.0.1
boundedContextName: iam
moduleName: account
moduleNames: accounts
aggregateName: IamAccount
hasOAuth: false
hasTenant: false
aggregateProperties:
  - name: id
    type: id
    primaryKey: true
    length: 36
    nullable: false
  - name: type
    type: enum
    enumOptions:
      - USER
      - SERVICE
    nullable: false
    example: USER
  - name: email
    type: varchar
    maxLength: 120
    nullable: false
    index: unique
    example: john@gmial.com
  - name: isActive
    type: boolean
    nullable: false
    example: true
  - name: clientId
    type: id
    length: 36
    nullable: false
    index: index
  - name: dApplicationCodes
    type: json
    nullable: false
  - name: dPermissions
    type: json
    nullable: false
  - name: dTenants
    type: json
    nullable: false
  - name: data
    type: json
    nullable: true
  - name: roles
    type: relationship
    nullable: true
    relationship: many-to-many
    relationshipSingularName: role
    relationshipAggregate: IamRole
    relationshipModulePath: iam/role
    intermediateModel: IamRolesAccountsModel
    intermediateModelModuleSection: iam/role
    intermediateModelFile: roles-accounts
  - name: tenants
    type: relationship
    nullable: true
    relationship: many-to-many
    relationshipSingularName: tenant
    relationshipAggregate: IamTenant
    relationshipModulePath: iam/tenant
    intermediateModel: IamTenantsAccountsModel
    intermediateModelModuleSection: iam/tenant
    intermediateModelFile: tenants-accounts
  - name: user
    type: IamUser
    nullable: true
    relationship: one-to-one
    relationshipAggregate: IamUser
    relationshipModulePath: iam/user
  - name: createdAt
    type: timestamp
    nullable: true
  - name: updatedAt
    type: timestamp
    nullable: true
  - name: deletedAt
    type: timestamp
    nullable: true
excluded:
  - src/apps/iam/account/resolvers/iam-create-accounts.resolver.ts
  - src/apps/iam/account/resolvers/iam-create-accounts.resolver.spec.ts
